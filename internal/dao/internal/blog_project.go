// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// BlogProjectDao is the data access object for table blog_project.
type BlogProjectDao struct {
	table   string             // table is the underlying table name of the DAO.
	group   string             // group is the database configuration group name of current DAO.
	columns BlogProjectColumns // columns contains all the column names of Table for convenient usage.
}

// BlogProjectColumns defines and stores column names for table blog_project.
type BlogProjectColumns struct {
	ProjectId       string // 项目Id
	ProjectName     string // 项目名称
	ProjectUrl      string // 项目地址
	ProjectDesc     string // 项目描述
	ProjectIcon     string // 项目图标
	ProjectIconDark string // 项目图标(暗色模式)
	UserId          string // 用户id
	CreateTime      string // 创建时间
	UpdateTime      string // 更新时间
}

// blogProjectColumns holds the columns for table blog_project.
var blogProjectColumns = BlogProjectColumns{
	ProjectId:       "project_id",
	ProjectName:     "project_name",
	ProjectUrl:      "project_url",
	ProjectDesc:     "project_desc",
	ProjectIcon:     "project_icon",
	ProjectIconDark: "project_icon_dark",
	UserId:          "user_id",
	CreateTime:      "create_time",
	UpdateTime:      "update_time",
}

// NewBlogProjectDao creates and returns a new DAO object for table data access.
func NewBlogProjectDao() *BlogProjectDao {
	return &BlogProjectDao{
		group:   "default",
		table:   "blog_project",
		columns: blogProjectColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *BlogProjectDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *BlogProjectDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *BlogProjectDao) Columns() BlogProjectColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *BlogProjectDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *BlogProjectDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *BlogProjectDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
